@using WebApplication4.Models.helper;
@model RoleManagerBug
@{
    ViewBag.Title = "UserRolePage";
}
@if (Model.RoleIn == null && Model.response == null)
{
<h3>Search for Users</h3>
<form action="@Url.Action("UserRolePage")" method="get" class="formalign">
    <ul class="list-inline">
        <li>
            First Name:
        </li>
        <li>
            <input type="text" id="FirstName" name="FirstName" />
        </li>
        <li>
            Last Name:
        </li>
        <li>
            <input type="text" id="LastName" name="LastName" />
        </li>
        <li>
            User Name:
        </li>
        <li>
            <input type="text" id="UserName" name="UserName" />
        </li>
        <li>
            <button type="submit" class="btn btn-primary">Search</button>
        </li>
    </ul><br />
</form>
<br />
}
    @if (Model.master != null)
    {
        if (Model.master.Count > 0)
        {
            @:<h3>Search Results</h3>
            @:<hr class="hrcolor" />
            foreach (var user in Model.master)
            {
                @:<form action="@Url.Action("UserRolePage")" method="get" class="formalign" target="_blank">
                    @:<div class="row">
                    @:<div class="col-xs-10">
                    @:<ul class="list-inline">
                        @:<li>
                            @:Name:
                        @:</li>
                        @:<li>
                            @Html.Raw(user.FirstName + " " + user.LastName)
                        @:</li>
                        @:<li>
                            @:|
                        @:</li>
                        @:<li>
                            @:Roles:
                        @:</li>
                        @:<li>
                            var roled = Model.helperin.ListUserRoles(user.Id);
                            var counter = roled.Count();
                            foreach (var role in roled)
                            {
                                if(counter > 1)
                                {
                                    @:@Html.Raw(role + ", ")
                                    counter--;    
                                }
                                else
                                {
                                    @:@Html.Raw(role)
                                }
                            }
                        @:</li>
                        @:<li>
                            @:|
                        @:</li>
                        @:<li>
                            @:User Name:
                        @:</li>
                        @:<li>
                            @Html.Raw(user.UserName)
                        @:</li>
                    @:</ul>
                    @:</div>
                        @:<div class="col-xs-2">
                            @:<input name="id" value="@user.Id" hidden />
                            @:<button type="submit" class="btn btn-primary">Select User</button>
                        @:</div>
                    @:</div>
                @:</form>
            }
        }
        else
        {
            @:No users to display
        }
    }
    @if (Model.RoleIn != null)
    {
        @:<h3>Assign Roles for User</h3>
        @:<hr class="hrcolor" />
        @:<form action="@Url.Action("UserRolePage")" method="post" class="formalign">
            @Html.AntiForgeryToken()
            @:<h4>@Html.Raw(Model.RoleIn.User.UserName)</h4>
            @:<input name="id" value="@Model.RoleIn.User.Id" hidden />
            @:<input name="Username" value="@Model.RoleIn.User.UserName" hidden />
            @:@Html.ListBoxFor(x => x.RoleIn.Roles, Model.RoleIn.RoleInput, new { Name = "Roles" })<br /><br />
            @:<button type="submit" class="btn btn-primary">Change User Roles</button>
        @:</form><br /><br />
        @:<button onclick="closeTab()" class="btn btn-primary">Close</button>
    }
    @if (Model.response != null)
    {
        @:<h3>Actions Performed</h3>
        @:<hr class="hrcolor" />
        string[] parse = Model.response.Split('&');
        foreach(var resp in parse)
        {
            @:@Html.Raw(resp)<br />
        }
        @:<button onclick="closeTab()" class="btn btn-primary">Close</button>
    }
    <script src="~/Scripts/UserRolePage.js"></script>